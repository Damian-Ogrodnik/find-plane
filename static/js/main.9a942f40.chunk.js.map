{"version":3,"sources":["redux/flights/flightsReducer.js","redux/flights/flightsTypes.js","redux/location/locationReducer.js","redux/location/locationTypes.js","redux/nearestFlights/nearestReducer.js","redux/nearestFlights/nearestTypes.js","redux/locationModal/modalReducer.js","redux/locationModal/modalTypes.js","redux/selectedLocation/selectLocationReducer.js","redux/selectedLocation/selectLocationTypes.js","redux/rootReducer.js","redux/store.js","App.Styles.js","redux/location/locationActions.js","redux/location/locationUtils.js","components/LoadingContainer/LoadingContainer.Styles.js","components/Map/GoogleMap.Styles.js","components/Map/GoogleMap.js","components/LoadingContainer/LoadingContainer.js","redux/selectedLocation/selectLocationActions.js","components/LocationModal/LocationModal.Styles.js","components/LocationModal/LocationModal.js","redux/locationModal/modalActions.js","components/Location/Location.Styles.js","components/Location/Location.js","components/Header/Header.Styles.js","components/Header/Header.js","redux/flights/flightsAction.js","services/flights/getFlights.js","redux/nearestFlights/nearestActions.js","services/flights/getNearestFligts.js","components/Spinner/Spinner.js","components/Flight/Flight.Styles.js","components/Flight/Flight.js","components/BoardHeader/BoardHeader.Styles.js","components/BoardHeader/BoardHeader.js","components/Flights/Flights.Styles.js","components/Flights/Flights.js","redux/nearestFlights/nearestUtils.js","redux/flights/flightsUtils.js","components/Footer/Footer.Styles.js","components/Footer/Footer.js","App.js","serviceWorker.js","index.js","assets/location-icon.png","assets/airport-icon.png","assets/plane-background.jpg"],"names":["initialState","flights","loading","error","fligthsReducer","state","action","type","payload","location","locationReducer","nearestFligthsReducer","openModal","modalReducer","selectedLocation","selectLocationReducer","rootReducer","combineReducers","flightsReducer","nearestFlights","nearestFlightsReducer","locationModal","store","createStore","composeWithDevTools","applyMiddleware","thunk","GlobalStyle","createGlobalStyle","App","styled","div","getLocationSucces","getLocation","dispatch","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","actions","message","timeout","LoaderWrapper","Paragraph","p","infoWrapper","Header","Position","mapStyles","width","height","textShadow","border","GoogleMap","props","lat","lng","this","setState","mapProps","map","clickEvent","latLng","selectLocation","Math","floor","google","zoom","style","initialCenter","onClick","clickEven","setLocation","visible","roundPosition","React","Component","GoggleMapExtended","GoogleApiWrapper","apiKey","LoadingContainer","color","connect","Button","button","CloseButton","MapWrapper","FlexWrapper","customStyles","content","top","left","right","bottom","background","transform","Modal","setAppElement","LocationModal","useSelector","useDispatch","isOpen","contentLabel","Object","entries","length","LocationWrapper","PositionWrapper","LocationParagraph","LocationIcon","img","Location","locationError","src","locationIcon","toUpperCase","Title","LogoWrapper","Logo","useEffect","logo","fetchFlightsSucces","getFlights","a","axios","get","data","states","getNearestFlightsSucces","getNearestFlights","allFlights","distance","filter","flight","filteredFlights","getDistance","distanceKM","icao24","callsign","origin_country","finalFlights","Promise","all","then","response","sort","b","Spinner","flightsLoading","nearestFlightsLoading","Flight","Column","Letter","renderFlight","category","maxLetters","letters","word","toString","lettersArray","split","slice","finalArray","letter","key","random","i","push","BoardHeader","createdCells","renderLetters","Fragment","spaceBar","renderSpaceBar","Board","Flights","image","Error","useState","clicked","setClick","flightsArray","splice","setNearestFlights","renderFlights","Footer","href","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.9a942f40.chunk.js","sourcesContent":["import * as types from \"./flightsTypes\";\r\n\r\nconst initialState = {\r\n  flights: [],\r\n  loading: false,\r\n  error: \"\"\r\n};\r\n\r\nconst fligthsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.FETCH_FLIGHTS:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    case types.FETCH_FLIGHTS_SUCCES:\r\n      return {\r\n        ...state,\r\n        flights: action.payload.flights,\r\n        loading: false\r\n      };\r\n    case types.FETCH_FLIGHTS_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n        loading: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default fligthsReducer;\r\n","export const FETCH_FLIGHTS = \"FETCH_FLIGHTS\";\r\nexport const FETCH_FLIGHTS_SUCCES = \"FETCH_FLIGHTS_SUCCES\";\r\nexport const FETCH_FLIGHTS_FAILURE = \"FETCH_FLIGHTS_FAILURE\";\r\n","import * as types from \"./locationTypes\";\r\n\r\nconst initialState = {\r\n  location: {},\r\n  loading: false,\r\n  error: \"\"\r\n};\r\n\r\nconst locationReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.GET_LOCATION:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    case types.GET_LOCATION_SUCCESS:\r\n      return {\r\n        location: action.payload.location,\r\n        loading: false,\r\n        error: \"\"\r\n      };\r\n    case types.GET_LOCATION_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n        loading: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default locationReducer;\r\n","export const GET_LOCATION = \"GET_LOCATION\";\r\nexport const GET_LOCATION_SUCCESS = \"GET_LOCATION_SUCCES\";\r\nexport const GET_LOCATION_FAILURE = \"GET_LOCATION_FAILURE\";\r\n","import * as types from \"./nearestTypes\";\r\n\r\nconst initialState = {\r\n  flights: [],\r\n  loading: false,\r\n  error: \"\"\r\n};\r\n\r\nconst nearestFligthsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.FETCH_NEAREST_FLIGHTS:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    case types.FETCH_NEAREST_FLIGHTS_SUCCES:\r\n      return {\r\n        ...state,\r\n        flights: action.payload.flights,\r\n        loading: false\r\n      };\r\n    case types.FETCH_NEAREST_FLIGHTS_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n        loading: false\r\n      };\r\n    case types.RESET_NEAREST_FLIGHTS:\r\n      return {\r\n        ...state,\r\n        flights: []\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default nearestFligthsReducer;\r\n","export const FETCH_NEAREST_FLIGHTS = \"FETCH_NEAREST_FLIGHTS\";\r\nexport const FETCH_NEAREST_FLIGHTS_SUCCES = \"FETCH_NEAREST_FLIGHTS_SUCCES\";\r\nexport const FETCH_NEAREST_FLIGHTS_FAILURE = \"FETCH_NEAREST_FLIGHTS_FAILURE\";\r\nexport const RESET_NEAREST_FLIGHTS = \"RESET_NEAREST_FLIGHTS\";\r\n","import * as types from \"./modalTypes\";\r\n\r\nconst initialState = {\r\n  openModal: false\r\n};\r\n\r\nconst modalReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.OPEN_MODAL:\r\n      return {\r\n        ...state,\r\n        openModal: true\r\n      };\r\n    case types.CLOSE_MODAL:\r\n      return {\r\n        ...state,\r\n        openModal: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default modalReducer;\r\n","export const OPEN_MODAL = \"OPEN_MODAL\";\r\nexport const CLOSE_MODAL = \"CLOSE_MODAL\";\r\n","import * as types from \"./selectLocationTypes\";\r\n\r\nconst initialState = {\r\n  selectedLocation: {}\r\n};\r\n\r\nconst selectLocationReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_LOCATION:\r\n      return {\r\n        ...state,\r\n        selectedLocation: action.payload\r\n      };\r\n    case types.RESET_LOCATION:\r\n      return {\r\n        ...state,\r\n        selectedLocation: {}\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default selectLocationReducer;\r\n","export const SELECT_LOCATION = \"SELECT_LOCATION\";\r\nexport const RESET_LOCATION = \"RESET_LOCATION\";\r\n","import { combineReducers } from \"redux\";\r\nimport flightsReducer from \"./flights/flightsReducer\";\r\nimport locationReducer from \"./location/locationReducer\";\r\nimport nearestFlightsReducer from \"./nearestFlights/nearestReducer\";\r\nimport modalReducer from \"./locationModal/modalReducer\";\r\nimport selectLocationReducer from \"./selectedLocation/selectLocationReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  flights: flightsReducer,\r\n  location: locationReducer,\r\n  nearestFlights: nearestFlightsReducer,\r\n  locationModal: modalReducer,\r\n  selectedLocation: selectLocationReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport rootReducer from \"./rootReducer\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport styled from \"styled-components\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n    *{\r\n      font-size: 62.5%;\r\n      margin: 0;\r\n      padding: 0;\r\n      box-sizing: border-box;\r\n    }\r\n    body {\r\n        font-family: monospace;\r\n        color: white;\r\n        text-shadow: -1px -2px 2px rgba(0,0,0,1);\r\n    }\r\n\r\n    body::-webkit-scrollbar {\r\n      width: 0.75rem;\r\n    }\r\n    body::-webkit-scrollbar-track {\r\n      box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\r\n    }\r\n    body::-webkit-scrollbar-thumb {\r\n      background-color: white;\r\n      outline: 1px solid slategrey;\r\n    }\r\n\r\n    @media only screen and (max-width: 600px)  {\r\n      *{\r\n        font-size: 50%;\r\n      }\r\n    }\r\n`;\r\n\r\nconst App = styled.div`\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport { GlobalStyle, App };\r\n","import * as types from \"./locationTypes\";\r\n\r\nexport const getLocation = () => {\r\n  return {\r\n    type: types.GET_LOCATION\r\n  };\r\n};\r\n\r\nexport const getLocationSucces = location => {\r\n  return {\r\n    type: types.GET_LOCATION_SUCCESS,\r\n    payload: { location }\r\n  };\r\n};\r\n\r\nexport const getLocationFailure = error => {\r\n  return {\r\n    type: types.GET_LOCATION_FAILURE,\r\n    payload: { error }\r\n  };\r\n};\r\n","import * as actions from \"./locationActions\";\r\n\r\nconst getLocation = () => dispatch => {\r\n  if (navigator.geolocation) {\r\n    dispatch(actions.getLocation());\r\n    const options = { timeout: 60000 };\r\n    navigator.geolocation.getCurrentPosition(\r\n      position => {\r\n        let { latitude, longitude } = position.coords;\r\n        dispatch(actions.getLocationSucces({ latitude, longitude }));\r\n      },\r\n      error => dispatch(actions.getLocationFailure(error.message)),\r\n      options\r\n    );\r\n  } else {\r\n    dispatch(\r\n      actions.getLocation(\"Sorry, browser does not support geolocation!\")\r\n    );\r\n  }\r\n};\r\n\r\nexport default getLocation;\r\n","import styled from \"styled-components\";\r\n\r\nconst LoaderWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column\r\n  align-items: center;\r\n  justify-content: center;\r\n  div:first-child {\r\n    height: 1.5rem !important;\r\n  }`;\r\n\r\nconst Paragraph = styled.p`\r\n  font-size: 1rem;\r\n  margin-top: 6rem;\r\n`;\r\n\r\nexport { LoaderWrapper, Paragraph };\r\n","import styled from \"styled-components\";\r\n\r\nconst infoWrapper = styled.div`\r\n  color: black;\r\n  text-align: center;\r\n`;\r\n\r\nconst Header = styled.div`\r\n  font-weight: 700;\r\n  font-size: 1.25rem;\r\n`;\r\n\r\nconst Position = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Paragraph = styled.p`\r\n  font-size: 1rem;\r\n  padding: 0.5rem 0rem 0rem 0.5rem;\r\n  @media only screen and (max-width: 600px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nexport { infoWrapper, Header, Position, Paragraph };\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { selectLocation } from \"../../redux/selectedLocation/selectLocationActions\";\r\nimport { Map, GoogleApiWrapper, InfoWindow } from \"google-maps-react\";\r\n\r\nimport { LoadingContainer } from \"../LoadingContainer\";\r\nimport * as S from \"./GoogleMap.Styles\";\r\n\r\nconst mapStyles = {\r\n  width: \"100%\",\r\n  height: \"100%\",\r\n  textShadow: \"none\",\r\n  border: \"2px solid black\"\r\n};\r\n\r\nclass GoogleMap extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      lat: 0,\r\n      lng: 0\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (!this.props.location.latitude || !this.props.location.longitude) return;\r\n    this.setState({\r\n      lat: this.props.location.latitude,\r\n      lng: this.props.location.longitude\r\n    });\r\n  }\r\n\r\n  setLocation(mapProps, map, clickEvent) {\r\n    this.setState(\r\n      {\r\n        lat: clickEvent.latLng.lat(),\r\n        lng: clickEvent.latLng.lng()\r\n      },\r\n      () =>\r\n        this.props.selectLocation({\r\n          latitude: this.state.lat,\r\n          longitude: this.state.lng\r\n        })\r\n    );\r\n  }\r\n\r\n  roundPosition(position) {\r\n    return position === \"lat\"\r\n      ? Math.floor(this.state.lat * 1000) / 1000\r\n      : Math.floor(this.state.lng * 1000) / 1000;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Map\r\n        google={this.props.google}\r\n        zoom={2}\r\n        style={mapStyles}\r\n        initialCenter={{ lat: 0, lng: 0 }}\r\n        onClick={(mapProps, map, clickEven) =>\r\n          this.setLocation(mapProps, map, clickEven)\r\n        }\r\n      >\r\n        <InfoWindow\r\n          visible={true}\r\n          position={{ lat: this.state.lat, lng: this.state.lng }}\r\n        >\r\n          <S.infoWrapper>\r\n            <S.Header>CHOSEN POSITION</S.Header>\r\n            <S.Position>\r\n              <S.Paragraph>LAT: {this.roundPosition(\"lat\")}</S.Paragraph>\r\n              <S.Paragraph>LON: {this.roundPosition(\"lng\")}</S.Paragraph>\r\n            </S.Position>\r\n          </S.infoWrapper>\r\n        </InfoWindow>\r\n      </Map>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    selectLocation: location => dispatch(selectLocation(location))\r\n  };\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    location: state.location.location\r\n  };\r\n};\r\n\r\nconst GoggleMapExtended = GoogleApiWrapper({\r\n  apiKey: \"AIzaSyAUjCt82CRJ4gJW92PLix2ul981OcvpmFA\",\r\n  LoadingContainer: LoadingContainer\r\n})(connect(mapStateToProps, mapDispatchToProps)(GoogleMap));\r\n\r\nexport { GoggleMapExtended as GoogleMap };\r\n","import React from \"react\";\r\nimport { GridLoader } from \"react-spinners\";\r\n\r\nimport * as S from \"./LoadingContainer.Styles\";\r\n\r\nfunction LoadingContainer() {\r\n  return (\r\n    <S.LoaderWrapper>\r\n      <GridLoader loading={true} color={\"#FFF\"} />\r\n      <S.Paragraph>LOADING GOOGLE MAP</S.Paragraph>\r\n    </S.LoaderWrapper>\r\n  );\r\n}\r\n\r\nexport { LoadingContainer };\r\n","import * as types from \"./selectLocationTypes\";\r\n\r\nexport const selectLocation = selectedLocation => {\r\n  return {\r\n    type: types.SELECT_LOCATION,\r\n    payload: selectedLocation\r\n  };\r\n};\r\n\r\nexport const resetSelectedLocation = () => {\r\n  return {\r\n    type: types.RESET_LOCATION\r\n  };\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nconst Header = styled.div`\r\n  font-size: 3rem;\r\n  margin: 0px 0px 2rem 0px;\r\n  @media only screen and (max-width: 600px) {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst Button = styled.button`\r\n  box-sizing: border-box;\r\n  transition: all 0.2s ease 0s;\r\n  font-size: 3rem;\r\n  color: white;\r\n  margin: 3rem 1rem;\r\n  padding: 1rem;\r\n  background: black;\r\n  text-align: center;\r\n  font-family: monospace;\r\n  border: 0.2rem solid white;\r\n  box-shadow: 0 8px 6px -6px black\r\n\r\n  :active {\r\n    transform: translateY(4px);\r\n  }\r\n  :hover {\r\n    border: 2px solid black;\r\n    background: white;\r\n    color: black;\r\n  }\r\n  :focus {\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nconst CloseButton = styled(Button)`\r\n  display: flex;\r\n  position: absolute;\r\n  top: 2rem;\r\n  right: 2rem;\r\n  margin: 0;\r\n  padding: 0.5rem;\r\n  font-size: 2rem;\r\n  font-weight: 700;\r\n  width: 4rem;\r\n  height: 4rem;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst MapWrapper = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  div:first-child {\r\n    position: relative !important;\r\n    height: 100%;\r\n    `;\r\n\r\nconst FlexWrapper = styled.div`\r\n  display: flex;\r\n  height: 100%;\r\n  align-items: center;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport { Header, Button, FlexWrapper, MapWrapper, CloseButton };\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\n\r\nimport { closeModal } from \"../../redux/locationModal/modalActions\";\r\nimport { getLocationSucces } from \"../../redux/location/locationActions\";\r\n\r\nimport { GoogleMap } from \"../Map\";\r\nimport * as S from \"./LocationModal.Styles\";\r\n\r\nconst customStyles = {\r\n  content: {\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    right: \"auto\",\r\n    bottom: \"auto\",\r\n    background: \"rgb(68, 68, 68)\",\r\n    border: \"0.2rem solid white\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    width: \"75%\",\r\n    height: \"80%\"\r\n  }\r\n};\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst LocationModal = () => {\r\n  const openModal = useSelector(state => state.locationModal.openModal);\r\n  const selectedLocation = useSelector(\r\n    state => state.selectedLocation.selectedLocation\r\n  );\r\n  const dispatch = useDispatch();\r\n\r\n  const setLocation = () => {\r\n    dispatch(closeModal());\r\n    if (Object.entries(selectedLocation).length !== 0)\r\n      dispatch(getLocationSucces(selectedLocation));\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={openModal}\r\n      style={customStyles}\r\n      contentLabel=\"Location Modal\"\r\n    >\r\n      <S.FlexWrapper>\r\n        <S.Header>SELECT LOCATION</S.Header>\r\n        <S.CloseButton onClick={() => dispatch(closeModal())}>X</S.CloseButton>\r\n        <S.MapWrapper>\r\n          <GoogleMap />\r\n        </S.MapWrapper>\r\n        <S.Button onClick={() => setLocation()}>SAVE</S.Button>\r\n      </S.FlexWrapper>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport { LocationModal };\r\n","import * as types from \"./modalTypes\";\r\n\r\nexport const openModal = () => {\r\n  return {\r\n    type: types.OPEN_MODAL\r\n  };\r\n};\r\n\r\nexport const closeModal = () => {\r\n  return {\r\n    type: types.CLOSE_MODAL\r\n  };\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nconst LocationWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst PositionWrapper = styled.div``;\r\n\r\nconst LocationParagraph = styled.p`\r\n  font-size: 1.75rem;\r\n  text-align: right;\r\n`;\r\n\r\nconst LocationIcon = styled.img`\r\n  height: 7rem;\r\n  filter: contrast(160%);\r\n  :hover {\r\n    filter: brightness(100);\r\n  }\r\n  :active {\r\n    transform: translateY(4px);\r\n  }\r\n  @media only screen and (max-width: 600px) {\r\n    height: 5rem;\r\n  }\r\n}\r\n`;\r\n\r\nexport { LocationWrapper, PositionWrapper, LocationParagraph, LocationIcon };\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { openModal } from \"../../redux/locationModal/modalActions\";\r\n\r\nimport { LocationModal } from \"../LocationModal\";\r\nimport locationIcon from \"../../assets/location-icon.png\";\r\nimport * as S from \"./Location.Styles\";\r\n\r\nconst Location = () => {\r\n  const location = useSelector(state => state.location.location);\r\n  const locationError = useSelector(state => state.location.error);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const roundPosition = position => {\r\n    return Math.floor(position * 1000) / 1000;\r\n  };\r\n\r\n  return (\r\n    <S.LocationWrapper>\r\n      <S.LocationIcon\r\n        src={locationIcon}\r\n        onClick={() => dispatch(openModal())}\r\n      />\r\n      <S.PositionWrapper>\r\n        {locationError ? (\r\n          <S.LocationParagraph>\r\n            {locationError.toUpperCase()}\r\n          </S.LocationParagraph>\r\n        ) : (\r\n          <>\r\n            <S.LocationParagraph>\r\n              LAT: {roundPosition(location.latitude)}\r\n            </S.LocationParagraph>\r\n            <S.LocationParagraph>\r\n              LON: {roundPosition(location.longitude)}\r\n            </S.LocationParagraph>\r\n          </>\r\n        )}\r\n      </S.PositionWrapper>\r\n      <LocationModal />\r\n    </S.LocationWrapper>\r\n  );\r\n};\r\n\r\nexport { Location };\r\n","import styled from \"styled-components\";\r\n\r\nconst Header = styled.div`\r\n  background: rgb(68, 68, 68);\r\n  display: flex;\r\n  justify-content: space-between;\r\n  border-bottom: 0.3rem solid white;\r\n  padding: 1rem;\r\n  box-shadow: 0 8px 6px -6px black;\r\n`;\r\n\r\nconst Title = styled.div`\r\n  font-size: 3rem;\r\n`;\r\n\r\nconst LogoWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst Logo = styled.img`\r\n  height: 7rem;\r\n  @media only screen and (max-width: 600px) {\r\n      height: 5rem;\r\n    }\r\n  }\r\n`;\r\n\r\nexport { Header, LogoWrapper, Title, Logo };\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport getLocation from \"../../redux/location/locationUtils\";\r\n\r\nimport { Location } from \"../Location\";\r\nimport logo from \"../../assets/airport-icon.png\";\r\nimport * as S from \"./Header.Styles\";\r\n\r\nconst Header = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getLocation());\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <S.Header>\r\n      <S.LogoWrapper>\r\n        <S.Logo src={logo} />\r\n        <S.Title>FIND PLANE</S.Title>\r\n      </S.LogoWrapper>\r\n      <Location />\r\n    </S.Header>\r\n  );\r\n};\r\n\r\nexport { Header };\r\n","import * as types from \"./flightsTypes\";\r\n\r\nexport const startFetchFlights = () => {\r\n  return {\r\n    type: types.FETCH_FLIGHTS\r\n  };\r\n};\r\n\r\nexport const fetchFlightsSucces = flights => {\r\n  return {\r\n    type: types.FETCH_FLIGHTS_SUCCES,\r\n    payload: { flights }\r\n  };\r\n};\r\n\r\nexport const fetchFlightFailure = error => {\r\n  return {\r\n    type: types.FETCH_FLIGHTS_FAILURE,\r\n    payload: { error }\r\n  };\r\n};\r\n","import axios from \"axios\";\r\n\r\nconst getFlights = async () => {\r\n  try {\r\n    const flights = await axios.get(\r\n      \"https://opensky-network.org/api/states/all\"\r\n    );\r\n    return flights.data.states;\r\n  } catch (err) {\r\n    return err;\r\n  }\r\n};\r\n\r\nexport default getFlights;\r\n","import * as types from \"./nearestTypes\";\r\n\r\nexport const getNearestFlights = () => {\r\n  return {\r\n    type: types.FETCH_NEAREST_FLIGHTS\r\n  };\r\n};\r\n\r\nexport const getNearestFlightsSucces = flights => {\r\n  return {\r\n    type: types.FETCH_NEAREST_FLIGHTS_SUCCES,\r\n    payload: { flights }\r\n  };\r\n};\r\n\r\nexport const getNearestFlightsFailure = error => {\r\n  return {\r\n    type: types.FETCH_NEAREST_FLIGHTS_FAILURE,\r\n    payload: { error }\r\n  };\r\n};\r\n\r\nexport const resetNearestFlights = () => {\r\n  return {\r\n    type: types.RESET_NEAREST_FLIGHTS\r\n  };\r\n};\r\n","import { getDistance } from \"geolib\";\r\n\r\nconst getNearestFlights = async (\r\n  { latitude, longitude },\r\n  allFlights,\r\n  distance = 1\r\n) => {\r\n  let nearestFlights = await allFlights.filter(flight => {\r\n    if (\r\n      flight[5] - distance < longitude &&\r\n      flight[5] + distance > longitude &&\r\n      flight[6] - distance < latitude &&\r\n      flight[6] + distance > latitude\r\n    ) {\r\n      return flight;\r\n    }\r\n  });\r\n\r\n  let finalFlights;\r\n  if (nearestFlights !== []) {\r\n    const filteredFlights = await nearestFlights.filter(\r\n      flight => flight[5] || flight[6] !== null\r\n    );\r\n    finalFlights = await filteredFlights.map(async flight => {\r\n      const distance = getDistance(\r\n        { latitude, longitude },\r\n        { latitude: flight[6], longitude: flight[5] }\r\n      );\r\n      const distanceKM = Math.floor(distance / 1000);\r\n      return {\r\n        icao24: flight[0],\r\n        callsign: flight[1],\r\n        origin_country: flight[2],\r\n        distance: distanceKM,\r\n        latitude: flight[6],\r\n        longitude: flight[5]\r\n      };\r\n    });\r\n  }\r\n\r\n  return await Promise.all(finalFlights).then(response => {\r\n    return response.sort((a, b) => (a.distance > b.distance ? 1 : -1));\r\n  });\r\n};\r\n\r\nexport default getNearestFlights;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { GridLoader } from \"react-spinners\";\r\n\r\nconst Spinner = () => {\r\n  const flightsLoading = useSelector(state => state.flights.loading);\r\n  const nearestFlightsLoading = useSelector(\r\n    state => state.nearestFlights.loading\r\n  );\r\n  return (\r\n    <GridLoader\r\n      loading={flightsLoading || nearestFlightsLoading}\r\n      color={\"#FFF\"}\r\n    />\r\n  );\r\n};\r\n\r\nexport { Spinner };\r\n","import styled from \"styled-components\";\r\n\r\nconst Flight = styled.div`\r\n  display: flex;\r\n  margin: 0.2rem;\r\n`;\r\n\r\nconst Column = styled.div`\r\n  font-size: 2.2vw;\r\n  display: flex;\r\n  allign-items: center;\r\n`;\r\n\r\nconst Letter = styled.div`\r\n  background: #444;\r\n  width: 1em;\r\n  height: 1em;\r\n  display: inline-block;\r\n  margin: 0 auto;\r\n  border-radius: 0.05em;\r\n  border: 0.01em solid #444;\r\n  position: relative;\r\n  background: #222;\r\n  text-align: center;\r\n  line-height: 1;\r\n  font-size: 2vw;\r\n  color: #fff;\r\n  font-family: monospace;\r\n  box-shadow: 0px 0.02em 0 #ccc, 0px 0.05em 0 #000;\r\n  text-shadow: -1px -2px 2px rgba(0, 0, 0, 1);\r\n\r\n  :after {\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 0;\r\n    content: \"\";\r\n    border-top: 1px solid #000;\r\n    border-bottom: 1px solid rgba(255, 255, 255, 0.3);\r\n    width: 100%;\r\n    height: 0px;\r\n    opacity: 0.8;\r\n    margin-top: -1px;\r\n  }\r\n  @media only screen and (max-width: 600px) {\r\n    :after {\r\n      border-top: none;\r\n      border-bottom: none;\r\n  }\r\n`;\r\n\r\nexport { Flight, Column, Letter };\r\n","import React from \"react\";\r\n\r\nimport * as S from \"./Flight.Styles\";\r\n\r\nconst Flight = ({ flight: { callsign, origin_country, distance } }) => {\r\n  let flightLength = 16;\r\n  let countryLenght = 18;\r\n  let distanceLength = 11;\r\n\r\n  const renderFlight = (category, maxLetters) => {\r\n    let letters = maxLetters;\r\n    let word = category.toString();\r\n    if (word === \"\") word = \"------\";\r\n    let lettersArray = word.split(\"\");\r\n    if (lettersArray.length >= maxLetters) {\r\n      lettersArray = lettersArray.slice(0, maxLetters);\r\n    }\r\n    const finalArray = lettersArray.map(letter => {\r\n      letters--;\r\n      return <S.Letter key={Math.random()}>{letter}</S.Letter>;\r\n    });\r\n    for (let i = 0; i < letters; i++) {\r\n      finalArray.push(<S.Letter key={Math.random()} />);\r\n    }\r\n    return finalArray;\r\n  };\r\n  return (\r\n    <S.Flight>\r\n      <S.Column>{renderFlight(callsign, flightLength)}</S.Column>\r\n      <S.Column>{renderFlight(origin_country, countryLenght)}</S.Column>\r\n      <S.Column>{renderFlight(distance, distanceLength)}</S.Column>\r\n    </S.Flight>\r\n  );\r\n};\r\n\r\nexport { Flight };\r\n","import styled from \"styled-components\";\r\n\r\nconst BoardHeader = styled.div`\r\n  display: flex;\r\n  margin: 0.2rem;\r\n`;\r\n\r\nconst Column = styled.div`\r\n  font-size: 2.2vw;\r\n  display: flex;\r\n  allign-items: center;\r\n`;\r\n\r\nconst Letter = styled.div`\r\n  background: #444;\r\n  width: 1em;\r\n  height: 1em;\r\n  display: inline-block;\r\n  margin: 0 auto;\r\n  border-radius: 0.05em;\r\n  border: 0.01em solid #444;\r\n  position: relative;\r\n  background: #222;\r\n  text-align: center;\r\n  line-height: 1;\r\n  font-size: 2vw;\r\n  color: #fff;\r\n  font-family: monospace;\r\n  box-shadow: 0px 0.02em 0 #ccc, 0px 0.05em 0 #000;\r\n  text-shadow: -1px -2px 2px rgba(0, 0, 0, 1);\r\n\r\n  :after {\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 0;\r\n    content: \"\";\r\n    border-top: 1px solid #000;\r\n    border-bottom: 1px solid rgba(255, 255, 255, 0.3);\r\n    width: 100%;\r\n    height: 0px;\r\n    opacity: 0.8;\r\n    margin-top: -1px;\r\n  }\r\n    @media only screen and (max-width: 600px) {\r\n    :after {\r\n      border-top: none;\r\n      border-bottom: none;\r\n  }\r\n`;\r\n\r\nexport { BoardHeader, Column, Letter };\r\n","import React from \"react\";\r\n\r\nimport * as S from \"./BoardHeader.Styles\";\r\n\r\nconst BoardHeader = () => {\r\n  const FlightNumber = \"FLIGHT NUMBER\";\r\n  const Country = \"   ORIGIN COUNTRY \";\r\n  const Distance = \"   DISTANCE-KM\";\r\n  let createdCells = 0;\r\n\r\n  const renderLetters = category => {\r\n    const lettersArray = category.split(\"\");\r\n    createdCells += lettersArray.length;\r\n    return lettersArray.map(letter => (\r\n      <S.Letter key={Math.random()}>{letter}</S.Letter>\r\n    ));\r\n  };\r\n\r\n  const renderSpaceBar = () => {\r\n    const spaceBar = [];\r\n    for (let i = 0; i < createdCells; i++) {\r\n      spaceBar.push(<S.Letter key={Math.random()} />);\r\n    }\r\n    return spaceBar;\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <S.BoardHeader>\r\n        <S.Column>{renderLetters(FlightNumber)}</S.Column>\r\n        <S.Column>{renderLetters(Country)}</S.Column>\r\n        <S.Column>{renderLetters(Distance)}</S.Column>\r\n      </S.BoardHeader>\r\n      <S.BoardHeader>\r\n        <S.Column>{renderSpaceBar()}</S.Column>\r\n      </S.BoardHeader>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport { BoardHeader };\r\n","import styled from \"styled-components\";\r\nimport image from \"../../assets/plane-background.jpg\";\r\n\r\nconst FlexWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  box-sizing: border-box;\r\n  transition: all 0.2s ease 0s;\r\n  font-size: 2vw;\r\n  color: white;\r\n  margin: 1rem 1rem 3rem 1rem;\r\n  padding: 1rem;\r\n  background: black;\r\n  text-align: center;\r\n  font-family: monospace;\r\n  border: 0.2rem solid white;\r\n  box-shadow: 0 8px 6px -6px black\r\n\r\n  :active {\r\n    transform: translateY(4px);\r\n  }\r\n  :hover {\r\n    border: 2px solid black;\r\n    background: white;\r\n    color: black;\r\n  }\r\n  :focus {\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nconst Board = styled.div`\r\n  border: 0.3rem solid white;\r\n  box-shadow: 0 8px 6px -6px black;\r\n  padding: 1rem 0px;\r\n  margin: 0px 1rem;\r\n  background: rgb(68, 68, 68);\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Flights = styled.div`\r\n  background-image: linear-gradient(\r\n    to right bottom,\r\n    rgba(0, 0, 0, 0.7),\r\n    rgba(88, 88, 88, 0.7)\r\n  ),url(\"${image}\");\r\n  background-size: cover; \r\n  background-position: center;\r\n  padding: 1rem 0px 5rem 0px;\r\n  flex-grow: 1;\r\n`;\r\n\r\nconst Error = styled.div`\r\n  font-size: 2rem;\r\n`;\r\n\r\nexport { FlexWrapper, Button, Board, Flights, Error };\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { fetchFlights } from \"../../redux/flights/flightsUtils\";\r\nimport { resetNearestFlights } from \"../../redux/nearestFlights/nearestActions\";\r\nimport { setNearestFlights } from \"../../redux/nearestFlights/nearestUtils\";\r\n\r\nimport { Spinner } from \"../Spinner\";\r\nimport { Flight } from \"../Flight\";\r\nimport { BoardHeader } from \"../BoardHeader\";\r\n\r\nimport * as S from \"./Flights.Styles\";\r\n\r\nconst Flights = () => {\r\n  const [clicked, setClick] = useState(false);\r\n\r\n  const location = useSelector(state => state.location.location);\r\n  const locationError = useSelector(state => state.location.error);\r\n  const flights = useSelector(state => state.flights.flights);\r\n  const nearestFlights = useSelector(state => state.nearestFlights.flights);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (flights.length === 0) return;\r\n    dispatch(setNearestFlights(location, flights));\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [flights]);\r\n\r\n  const getNearestFlights = () => {\r\n    if (locationError || Object.entries(location).length === 0)\r\n      return setClick(true);\r\n    setClick(false);\r\n    dispatch(resetNearestFlights());\r\n    dispatch(fetchFlights());\r\n  };\r\n\r\n  const renderFlights = () => {\r\n    if (nearestFlights.length !== 0) {\r\n      return (\r\n        <S.Board>\r\n          <BoardHeader />\r\n          {nearestFlights.map(flight => (\r\n            <Flight key={flight.callsign} flight={flight} />\r\n          ))}\r\n        </S.Board>\r\n      );\r\n    }\r\n  };\r\n  return (\r\n    <S.Flights>\r\n      <S.FlexWrapper>\r\n        <S.Button onClick={() => getNearestFlights()}>GET FLIGHTS</S.Button>\r\n        <Spinner />\r\n        {(locationError || Object.entries(location).length === 0) &&\r\n          clicked && <S.Error>YOU HAVE TO SET LOCATION BEFORE SEARCH</S.Error>}\r\n      </S.FlexWrapper>\r\n      {renderFlights()}\r\n    </S.Flights>\r\n  );\r\n};\r\n\r\nexport { Flights };\r\n","import * as actions from \"./nearestActions\";\r\nimport getNearestFlights from \"../../services/flights/getNearestFligts\";\r\n\r\nexport const setNearestFlights = (location, flightsArray) => async dispatch => {\r\n  dispatch(actions.getNearestFlights());\r\n  let flights = await getNearestFlights(location, flightsArray);\r\n  if (flights.length === 0) {\r\n    flights = await getNearestFlights(location, flightsArray, 50);\r\n    flights.length === 0\r\n      ? dispatch(actions.getNearestFlightsFailure(\"Something went wrong...\"))\r\n      : flights.length > 20\r\n      ? dispatch(actions.getNearestFlightsSucces(flights.splice(0, 19)))\r\n      : dispatch(actions.getNearestFlightsSucces(flights));\r\n  } else {\r\n    flights.length > 20\r\n      ? dispatch(actions.getNearestFlightsSucces(flights.splice(0, 19)))\r\n      : dispatch(actions.getNearestFlightsSucces(flights));\r\n  }\r\n};\r\n","import * as actions from \"./flightsAction\";\r\nimport getFlights from \"../../services/flights/getFlights\";\r\n\r\nexport const fetchFlights = () => async dispatch => {\r\n  try {\r\n    dispatch(actions.startFetchFlights());\r\n    const flights = await getFlights();\r\n    dispatch(actions.fetchFlightsSucces(flights));\r\n  } catch (error) {\r\n    dispatch(actions.fetchFlightFailure(error));\r\n  }\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nconst Footer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n  border-top: 0.3rem solid white;\r\n  background: rgb(68, 68, 68);\r\n  height: 5rem;\r\n`;\r\n\r\nconst Paragraph = styled.div`\r\n  font-size: 2rem;\r\n  a {\r\n    font-size: 2rem;\r\n    text-decoration: none;\r\n    color: white;\r\n  }\r\n  a:hover {\r\n    color: gold;\r\n  }\r\n`;\r\n\r\nexport { Footer, Paragraph };\r\n","import React from \"react\";\r\n\r\nimport * as S from \"./Footer.Styles\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <S.Footer>\r\n      <S.Paragraph>\r\n        <a href=\"https://github.com/dogrodnik\">© 2019 DOGRODNIK</a>\r\n      </S.Paragraph>\r\n    </S.Footer>\r\n  );\r\n}\r\n\r\nexport { Footer };\r\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\n\nimport store from \"./redux/store\";\n\nimport { GlobalStyle } from \"./App.Styles\";\nimport { Header } from \"./components/Header\";\nimport { Flights } from \"./components/Flights\";\nimport { Footer } from \"./components/Footer\";\n\nimport * as S from \"./App.Styles\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <GlobalStyle />\n      <S.App>\n        <Header />\n        <Flights />\n        <Footer />\n      </S.App>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/location-icon.2679cbd1.png\";","module.exports = __webpack_public_path__ + \"static/media/airport-icon.d24fab1b.png\";","module.exports = __webpack_public_path__ + \"static/media/plane-background.16451de9.jpg\";"],"sourceRoot":""}